name: Android Build and Deploy

on:
  push:
    branches:
      - dev
      - staging
      - main
    tags:
      - 'v*'
  workflow_dispatch:  # Allow manual triggering

jobs:
  build-and-deploy:
    name: Build and Deploy to Google Play
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Setup EAS
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}
      
      - name: Install dependencies
        run: npm ci
      
      - name: Set deployment track based on branch
        id: set-track
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/dev" ]]; then
            echo "TRACK=internal" >> $GITHUB_ENV
            echo "BUILD_PROFILE=preview" >> $GITHUB_ENV
          elif [[ "${{ github.ref }}" == "refs/heads/staging" ]]; then
            echo "TRACK=closed" >> $GITHUB_ENV
            echo "BUILD_PROFILE=preview" >> $GITHUB_ENV
          elif [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "TRACK=production" >> $GITHUB_ENV
            echo "BUILD_PROFILE=production" >> $GITHUB_ENV
          else
            echo "TRACK=internal" >> $GITHUB_ENV
            echo "BUILD_PROFILE=preview" >> $GITHUB_ENV
          fi
          
      - name: Build Android App
        run: eas build --platform android --profile ${{ env.BUILD_PROFILE }} --non-interactive --wait
          
      - name: Download latest build
        run: |
          # Get the latest build ID
          BUILD_ID=$(eas build:list --json --limit=1 --platform=android --status=finished | grep -o '"id":"[^"]*"' | head -1 | sed 's/"id":"//g' | sed 's/"//g')
          
          if [ -z "$BUILD_ID" ]; then
            echo "Could not find any finished builds. Exiting with error."
            exit 1
          fi
          
          echo "Downloading build $BUILD_ID..."
          mkdir -p artifacts
          eas build:download --build-id $BUILD_ID --output=artifacts/app-release.aab --non-interactive
          
          if [ ! -f "artifacts/app-release.aab" ]; then
            echo "Failed to download artifact"
            exit 1
          fi
          
          echo "Successfully downloaded app-release.aab"
          ls -la artifacts/app-release.aab
          
      - name: Setup Google Play Service Account
        run: |
          echo '${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT_JSON }}' > service-account.json
          
      - name: Deploy to Google Play
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJson: service-account.json
          packageName: com.trickydex.app
          releaseFiles: artifacts/app-release.aab
          track: ${{ env.TRACK }}
          status: completed
