name: Android Build and Deploy

on:
  push:
    branches:
      - dev
      - staging
      - main
    tags:
      - 'v*'
  workflow_dispatch:  # Allow manual triggering

jobs:
  build-and-deploy:
    name: Build and Deploy to Google Play
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Setup EAS
        run: npm install -g eas-cli
        
      - name: Setup Expo
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}
      
      - name: Set deployment track based on branch
        id: set-track
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/dev" ]]; then
            echo "TRACK=internal" >> $GITHUB_ENV
            echo "BUILD_PROFILE=preview" >> $GITHUB_ENV
          elif [[ "${{ github.ref }}" == "refs/heads/staging" ]]; then
            echo "TRACK=closed" >> $GITHUB_ENV
            echo "BUILD_PROFILE=preview" >> $GITHUB_ENV
          elif [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "TRACK=production" >> $GITHUB_ENV
            echo "BUILD_PROFILE=production" >> $GITHUB_ENV
          else
            echo "TRACK=internal" >> $GITHUB_ENV
            echo "BUILD_PROFILE=preview" >> $GITHUB_ENV
          fi
          
      - name: Trigger Android App Build
        id: trigger_build
        run: |
          echo "Starting Android build with profile ${{ env.BUILD_PROFILE }}..."
          BUILD_OUTPUT=$(eas build --platform android --profile ${{ env.BUILD_PROFILE }} --non-interactive --json)
          echo "Build triggered successfully"
          echo "BUILD_OUTPUT<<EOF" >> $GITHUB_ENV
          echo "$BUILD_OUTPUT" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
          
          # Extract build ID
          BUILD_ID=$(echo "$BUILD_OUTPUT" | grep -o '"id":"[^"]*"' | head -1 | sed 's/"id":"//g' | sed 's/"//g')
          if [ -z "$BUILD_ID" ]; then
            echo "Failed to extract build ID"
            exit 1
          fi
          echo "BUILD_ID=$BUILD_ID" >> $GITHUB_ENV
          echo "Build ID: $BUILD_ID"
      
      - name: Wait for build to complete
        run: |
          echo "Waiting for build ${{ env.BUILD_ID }} to complete..."
          eas build:show ${{ env.BUILD_ID }} --non-interactive --wait
          echo "Build completed"
      
      - name: Download build artifact
        run: |
          echo "Downloading build artifact for build ${{ env.BUILD_ID }}..."
          mkdir -p artifacts
          eas build:download --build-id ${{ env.BUILD_ID }} --output=artifacts/app-release.aab --non-interactive
          
          if [ ! -f "artifacts/app-release.aab" ]; then
            echo "Failed to download artifact"
            exit 1
          fi
          
          echo "Successfully downloaded app-release.aab"
          ls -la artifacts/app-release.aab
          
      - name: Setup Google Play Service Account
        run: |
          echo '${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT_JSON }}' > service-account.json
          
      - name: Deploy to Google Play
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJson: service-account.json
          packageName: com.trickydex.app
          releaseFiles: artifacts/app-release.aab
          track: ${{ env.TRACK }}
          status: completed
